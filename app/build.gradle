plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
}

// 多渠道打包配置已引用的方式传递
apply from: rootProject.file('flavors.gradle')
apply from: rootProject.file('signings.gradle')
apply from: rootProject.file('buildRelease.gradle')

// By appending the version name, build type, and a timestamp to the APK filename,
// it becomes very easy for testers and developers to identify exactly which version of the application they are testing.
// This is particularly useful when multiple versions or builds are being tested simultaneously.
// Testers don’t need to manually rename APKs to keep track of different builds or worry about which version is the latest.
android.applicationVariants.configureEach { variant ->
    variant.outputs.configureEach { output ->
        def versionName = variant.versionName
        def buildType = variant.buildType.name
        def flavorName = variant.flavorName

        // Set the archivesBaseName property
        // https://stackoverflow.com/questions/52508720/how-to-change-the-generated-filename-for-app-bundles-with-gradle
        project.setProperty("archivesBaseName", "siyuan-${versionName}")

        // 根据构建类型调整文件名
        if (buildType != "release") {
            def formattedDate = new Date().format('yyyyMMddHHmmss')
            project.setProperty("archivesBaseName", "siyuan-${versionName}-${buildType}-${formattedDate}")
        }
    }
}

android {
    namespace 'org.b3log.siyuan'
    compileSdk 34

    defaultConfig {
        applicationId "org.b3log.siyuan"
        minSdk 24
        targetSdk 34
        versionCode 234
        versionName "3.0.14"

        // 开启矢量图支持库
        // 从 Android 5.0 (API 级别 21) 开始，矢量图（VectorDrawable）被引入
        vectorDrawables {
            // 使用支持库来让 VectorDrawables 在老版本的 Android 系统上工作
            // 这样可以确保在老版本系统上也能使用矢量图资源
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // 正式版打包时指定签名证书
            signingConfig signingConfigs.siyuanConfig

            minifyEnabled true
            shrinkResources true
            // 此处优先级太高，渠道处配置 resValue 不会生效，故放到了 productFlavors 多渠道打包处处理
            // resValue "string", "app_name", "SiYuan"
            resValue "string", "app_package_name", "org.b3log.siyuan"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            resValue "string", "app_name", "SiYuan-Debug"
            resValue "string", "app_package_name", "org.b3log.siyuan.debug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES',
                         'META-INF/LICENSE',
                         'META-INF/LICENSE.txt',
                         'META-INF/license.txt',
                         'META-INF/NOTICE',
                         'META-INF/NOTICE.txt',
                         'META-INF/notice.txt',
                         'plugin.properties',
                         '/META-INF/{AL2.0,LGPL2.1}'
            ]
        }
        jniLibs {
            useLegacyPackaging true
        }
    }

    lint {
        abortOnError false
    }
    // add kotlin jvm configure
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // 启用 Compose 功能
    buildFeatures {
        compose true
        buildConfig true // custom BuildConfig fields
    }
    // 定义 Kotlin 编译器扩展与 Kotlin 版本相关联
    // https://developer.android.com/jetpack/androidx/releases/compose-kotlin?hl=zh-cn
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.13"
    }
}

dependencies {
    // 思源内核 kernel
    implementation files('libs/kernel.aar')

    implementation libs.ultimateBarx
    implementation libs.utilcodex
    implementation libs.androidasync
    implementation("commons-io:commons-io:2.5") // 不要升级，否则无法兼容 Android 7

    implementation libs.androidx.work.runtime

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}
